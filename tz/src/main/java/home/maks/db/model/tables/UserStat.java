/*
 * This file is generated by jOOQ.
*/
package home.maks.db.model.tables;


import home.maks.db.model.Indexes;
import home.maks.db.model.Tz;
import home.maks.db.model.tables.records.UserStatRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserStat extends TableImpl<UserStatRecord> {

    private static final long serialVersionUID = 846651341;

    /**
     * The reference instance of <code>TZ.USER_STAT</code>
     */
    public static final UserStat USER_STAT = new UserStat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserStatRecord> getRecordType() {
        return UserStatRecord.class;
    }

    /**
     * The column <code>TZ.USER_STAT.FILE_ID</code>.
     */
    public final TableField<UserStatRecord, Integer> FILE_ID = createField("FILE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TZ.USER_STAT.SEQ_ID</code>.
     */
    public final TableField<UserStatRecord, Integer> SEQ_ID = createField("SEQ_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TZ.USER_STAT.SSOID</code>.
     */
    public final TableField<UserStatRecord, String> SSOID = createField("SSOID", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>TZ.USER_STAT.FORMID</code>.
     */
    public final TableField<UserStatRecord, String> FORMID = createField("FORMID", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * Create a <code>TZ.USER_STAT</code> table reference
     */
    public UserStat() {
        this(DSL.name("USER_STAT"), null);
    }

    /**
     * Create an aliased <code>TZ.USER_STAT</code> table reference
     */
    public UserStat(String alias) {
        this(DSL.name(alias), USER_STAT);
    }

    /**
     * Create an aliased <code>TZ.USER_STAT</code> table reference
     */
    public UserStat(Name alias) {
        this(alias, USER_STAT);
    }

    private UserStat(Name alias, Table<UserStatRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserStat(Name alias, Table<UserStatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tz.TZ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NX_USERSTAT_FILEID_SEQID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserStat as(String alias) {
        return new UserStat(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserStat as(Name alias) {
        return new UserStat(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserStat rename(String name) {
        return new UserStat(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserStat rename(Name name) {
        return new UserStat(name, null);
    }
}
